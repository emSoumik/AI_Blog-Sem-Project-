<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <title>Edit Article - ThoughtThread</title>
    <style>
        :root {
            --dark-bg: #000000;
            --dark-surface: #1c1c1e;
            --accent-color: #0071e3;
            --accent-gradient: linear-gradient(135deg, #0071e3 0%, #47a3ff 100%);
            --text-primary: #ffffff;
            --text-secondary: #86868b;
            --sidebar-width: 280px;
        }

        body {
            background-color: var(--dark-bg);
            color: var(--text-primary);
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            min-height: 100vh;
            margin: 0;
        }

        .editor-container {
            max-width: 900px;
            margin: 2rem auto;
            padding: 2rem;
            background: var(--dark-surface);
            border-radius: 24px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .editor-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .editor-title {
            font-size: 1.8rem;
            font-weight: 600;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .editor-actions {
            display: flex;
            gap: 1rem;
            position: sticky;
            top: 1rem;
            z-index: 1000;
            padding: 1rem;
            background: rgba(28, 28, 30, 0.95);
            border-radius: 16px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            margin: -1rem -1rem 1rem -1rem;
        }

        .save-indicator {
            position: fixed;
            top: 2rem;
            right: 2rem;
            background: rgba(28, 28, 30, 0.95);
            padding: 1rem 1.5rem;
            border-radius: 12px;
            color: var(--text-secondary);
            display: flex;
            align-items: center;
            gap: 0.5rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            opacity: 0;
            transform: translateY(-20px);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .save-indicator.show {
            opacity: 1;
            transform: translateY(0);
        }

        .form-control {
            background: rgba(60, 60, 60, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--text-primary);
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .form-control:focus {
            background: rgba(70, 70, 70, 0.7);
            border-color: var(--accent-color);
            color: var(--text-primary);
            box-shadow: 0 0 0 4px rgba(0, 113, 227, 0.1);
        }

        .form-label {
            color: var(--text-secondary);
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .editor-toolbar {
            background: rgba(60, 60, 60, 0.5);
            padding: 0.8rem;
            border-radius: 12px;
            margin-bottom: 1rem;
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .toolbar-btn {
            background: transparent;
            border: none;
            color: var(--text-secondary);
            padding: 0.5rem;
            border-radius: 6px;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .toolbar-btn:hover {
            background: rgba(255, 255, 255, 0.1);
            color: var(--text-primary);
        }

        .toolbar-separator {
            width: 1px;
            background: rgba(255, 255, 255, 0.1);
            margin: 0 0.5rem;
        }

        textarea.form-control {
            min-height: 400px;
            resize: vertical;
            font-family: 'SF Mono', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
            line-height: 1.6;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background: var(--accent-gradient);
            border: none;
            box-shadow: 0 4px 15px rgba(0, 113, 227, 0.2);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 113, 227, 0.3);
        }

        .btn-outline {
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--text-primary);
        }

        .btn-outline:hover {
            background: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.3);
            color: var(--text-primary);
        }

        @media (max-width: 768px) {
            .editor-container {
                margin: 1rem;
                padding: 1.5rem;
            }

            .editor-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }

            .editor-actions {
                width: 100%;
                justify-content: flex-end;
            }
        }

        .alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
            border-radius: 12px;
            padding: 1rem 1.5rem;
            animation: slideIn 0.3s ease-out;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border: none;
        }

        .alert-success {
            background: rgba(40, 167, 69, 0.95);
            color: white;
        }

        .alert-danger {
            background: rgba(220, 53, 69, 0.95);
            color: white;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <% if (messages.error) { %>
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i>
            <%= messages.error %>
        </div>
    <% } %>
    <% if (messages.success) { %>
        <div class="alert alert-success">
            <i class="fas fa-check-circle me-2"></i>
            <%= messages.success %>
        </div>
    <% } %>

    <div class="editor-container">
        <div class="editor-header">
            <h1 class="editor-title">Edit Article</h1>
            <div class="editor-actions">
                <a href="/articles/<%= article.slug %>" class="btn btn-outline">
                    <i class="fas fa-times"></i>
                    Cancel
                </a>
                <button type="submit" form="articleForm" class="btn btn-primary">
                    <i class="fas fa-save"></i>
                    Save Changes
                </button>
            </div>
        </div>

        <div class="save-indicator">
            <i class="fas fa-check"></i>
            <span>Changes saved</span>
        </div>

        <form action="/articles/<%= article.slug %>?_method=PUT" method="POST" id="articleForm">
            <div class="mb-4">
                <label class="form-label" for="title">
                    <i class="fas fa-heading"></i>
                    Title
                </label>
                <input required type="text" name="title" id="title" class="form-control" value="<%= article.title %>">
            </div>

            <div class="mb-4">
                <label class="form-label" for="description">
                    <i class="fas fa-align-left"></i>
                    Description
                </label>
                <input required type="text" name="description" id="description" class="form-control" value="<%= article.description %>">
            </div>

            <div class="editor-toolbar">
                <button type="button" class="toolbar-btn" title="Bold">
                    <i class="fas fa-bold"></i>
                </button>
                <button type="button" class="toolbar-btn" title="Italic">
                    <i class="fas fa-italic"></i>
                </button>
                <button type="button" class="toolbar-btn" title="Underline">
                    <i class="fas fa-underline"></i>
                </button>
                <div class="toolbar-separator"></div>
                <button type="button" class="toolbar-btn" title="Heading">
                    <i class="fas fa-heading"></i>
                </button>
                <button type="button" class="toolbar-btn" title="Quote">
                    <i class="fas fa-quote-right"></i>
                </button>
                <button type="button" class="toolbar-btn" title="Code">
                    <i class="fas fa-code"></i>
                </button>
                <div class="toolbar-separator"></div>
                <button type="button" class="toolbar-btn" title="Link">
                    <i class="fas fa-link"></i>
                </button>
                <button type="button" class="toolbar-btn" title="Image">
                    <i class="fas fa-image"></i>
                </button>
            </div>

            <div class="mb-4">
                <label class="form-label" for="markdown">
                    <i class="fas fa-pen-fancy"></i>
                    Content
                </label>
                <textarea required name="markdown" id="markdown" class="form-control"><%= article.markdown %></textarea>
            </div>
        </form>
    </div>

    <script>
        // Auto-save functionality
        let saveTimeout;
        const form = document.getElementById('articleForm');
        const saveIndicator = document.querySelector('.save-indicator');

        function showSaveIndicator() {
            saveIndicator.classList.add('show');
            setTimeout(() => {
                saveIndicator.classList.remove('show');
            }, 2000);
        }

        function autoSave() {
            // Clear previous timeout
            if (saveTimeout) clearTimeout(saveTimeout);
            
            // Set new timeout
            saveTimeout = setTimeout(() => {
                const formData = new FormData(form);
                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (response.ok) {
                        showSaveIndicator();
                    }
                });
            }, 1000);
        }

        // Add auto-save to form inputs
        form.querySelectorAll('input, textarea').forEach(input => {
            input.addEventListener('input', autoSave);
        });

        // Simple toolbar functionality
        document.querySelectorAll('.toolbar-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const textarea = document.getElementById('markdown');
                const start = textarea.selectionStart;
                const end = textarea.selectionEnd;
                const selectedText = textarea.value.substring(start, end);
                
                let format = '';
                switch(btn.title.toLowerCase()) {
                    case 'bold':
                        format = `**${selectedText}**`;
                        break;
                    case 'italic':
                        format = `*${selectedText}*`;
                        break;
                    case 'heading':
                        format = `\n# ${selectedText}`;
                        break;
                    case 'quote':
                        format = `\n> ${selectedText}`;
                        break;
                    case 'code':
                        format = `\`${selectedText}\``;
                        break;
                    default:
                        return;
                }
                
                textarea.value = textarea.value.substring(0, start) + format + textarea.value.substring(end);
                textarea.focus();
                autoSave();
            });
        });

        // Warn before leaving with unsaved changes
        window.addEventListener('beforeunload', (e) => {
            if (saveTimeout) {
                e.preventDefault();
                e.returnValue = '';
            }
        });

        document.getElementById('articleForm').addEventListener('submit', async (e) => {
            e.preventDefault()
            
            try {
                const formData = new FormData(e.target)
                const response = await fetch(e.target.action, {
                    method: 'POST',
                    body: formData
                })
                
                const result = await response.json()
                
                if (result.success) {
                    showSaveIndicator()
                    if (result.redirect) {
                        window.location.href = result.redirect
                    }
                } else {
                    alert('Error saving changes: ' + result.message)
                }
            } catch (err) {
                console.error(err)
                alert('Error saving changes')
            }
        })

        // Auto-hide alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', () => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateX(100%)';
                    setTimeout(() => alert.remove(), 300);
                }, 5000);
            });
        });
    </script>
</body>
</html>