<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <title><%= article.title %> - ThoughtThread</title>
    <style>
        :root {
            --dark-bg: #000000;
            --dark-surface: #1c1c1e;
            --accent-color: #0071e3;
            --accent-gradient: linear-gradient(135deg, #0071e3 0%, #47a3ff 100%);
            --text-primary: #ffffff;
            --text-secondary: #86868b;
            --sidebar-width: 280px;
        }

        body {
            background-color: var(--dark-bg);
            color: var(--text-primary);
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            min-height: 100vh;
            margin: 0;
        }

        .article-container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 2rem;
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .article-header {
            background: var(--dark-surface);
            border-radius: 24px;
            padding: 3rem;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .article-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at top right, rgba(71, 163, 255, 0.1), transparent 70%);
            pointer-events: none;
        }

        .article-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            line-height: 1.3;
        }

        .article-meta {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            color: var(--text-secondary);
            font-size: 0.9rem;
            margin-bottom: 2rem;
        }

        .article-meta > div {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .article-actions {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .bookmark-btn {
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--text-primary);
            padding: 0.8rem 1.5rem;
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
        }

        .bookmark-btn:hover {
            background: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

        .bookmark-btn.active {
            background: var(--accent-gradient);
            border-color: transparent;
            box-shadow: 0 4px 15px rgba(0, 113, 227, 0.2);
        }

        .bookmark-btn.active:hover {
            box-shadow: 0 6px 20px rgba(0, 113, 227, 0.3);
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background: var(--accent-gradient);
            border: none;
            box-shadow: 0 4px 15px rgba(0, 113, 227, 0.2);
            color: var(--text-primary);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 113, 227, 0.3);
            color: var(--text-primary);
        }

        .btn-outline {
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--text-primary);
        }

        .btn-outline:hover {
            background: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.3);
            color: var(--text-primary);
        }

        .article-content {
            background: var(--dark-surface);
            border-radius: 24px;
            padding: 3rem;
            margin-top: 2rem;
            line-height: 1.8;
            font-size: 1.1rem;
            color: var(--text-primary);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .article-content h1,
        .article-content h2,
        .article-content h3 {
            color: var(--text-primary);
            margin: 2rem 0 1rem;
            font-weight: 600;
        }

        .article-content p {
            margin-bottom: 1.5rem;
            color: var(--text-secondary);
        }

        .article-content pre {
            background: rgba(0, 0, 0, 0.3);
            padding: 1.5rem;
            border-radius: 12px;
            overflow-x: auto;
            margin: 1.5rem 0;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .article-content blockquote {
            border-left: 4px solid var(--accent-color);
            padding-left: 1.5rem;
            margin: 1.5rem 0;
            font-style: italic;
            color: var(--text-secondary);
        }

        @media (max-width: 768px) {
            .article-container {
                margin: 1rem;
                padding: 1rem;
            }

            .article-header,
            .article-content {
                padding: 2rem;
            }

            .article-title {
                font-size: 2rem;
            }

            .article-meta {
                flex-wrap: wrap;
                gap: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="article-container">
        <div class="article-header">
            <h1 class="article-title"><%= article.title %></h1>
            <div class="article-meta">
                <div>
                    <i class="far fa-calendar"></i>
                    <%= article.createdAt.toLocaleDateString() %>
                </div>
                <div>
                    <i class="far fa-clock"></i>
                    5 min read
                </div>
                <div>
                    <i class="far fa-user"></i>
                    John Doe
                </div>
            </div>
            <p class="lead" style="color: var(--text-secondary);"><%= article.description %></p>
            <div class="article-actions">
                <button class="bookmark-btn" data-article-id="<%= article.id %>" onclick="toggleBookmark(this)">
                    <i class="far fa-bookmark"></i>
                    <span>Bookmark</span>
                </button>
                <a href="/articles/edit/<%= article.slug %>" class="btn btn-primary">
                    <i class="fas fa-edit"></i>
                    Edit Article
                </a>
                <form action="/articles/<%= article.id %>?_method=DELETE" method="POST" class="d-inline">
                    <button type="submit" class="btn btn-outline" onclick="return confirm('Are you sure you want to delete this article?')">
                        <i class="fas fa-trash"></i>
                        Delete
                    </button>
                </form>
                <a href="/" class="btn btn-outline">
                    <i class="fas fa-arrow-left"></i>
                    Back
                </a>
            </div>
        </div>

        <div class="article-content">
            <%- article.markdown %>
        </div>
    </div>

    <script>
        // Bookmark functionality
        function toggleBookmark(btn) {
            const articleId = btn.dataset.articleId;
            const icon = btn.querySelector('i');
            const text = btn.querySelector('span');
            const isBookmarked = icon.classList.contains('fas');
            
            // Toggle bookmark icon and text
            icon.classList.toggle('far', isBookmarked);
            icon.classList.toggle('fas', !isBookmarked);
            btn.classList.toggle('active', !isBookmarked);
            text.textContent = isBookmarked ? 'Bookmark' : 'Bookmarked';
            
            // Get existing bookmarks from localStorage
            const bookmarks = JSON.parse(localStorage.getItem('bookmarks') || '[]');
            
            if (isBookmarked) {
                // Remove from bookmarks
                const index = bookmarks.indexOf(articleId);
                if (index > -1) bookmarks.splice(index, 1);
            } else {
                // Add to bookmarks
                if (!bookmarks.includes(articleId)) {
                    bookmarks.push(articleId);
                }
            }
            
            // Save updated bookmarks
            localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
        }

        // Initialize bookmark state on page load
        document.addEventListener('DOMContentLoaded', () => {
            const bookmarkBtn = document.querySelector('.bookmark-btn');
            if (bookmarkBtn) {
                const articleId = bookmarkBtn.dataset.articleId;
                const bookmarks = JSON.parse(localStorage.getItem('bookmarks') || '[]');
                
                if (bookmarks.includes(articleId)) {
                    const icon = bookmarkBtn.querySelector('i');
                    const text = bookmarkBtn.querySelector('span');
                    icon.classList.remove('far');
                    icon.classList.add('fas');
                    bookmarkBtn.classList.add('active');
                    text.textContent = 'Bookmarked';
                }
            }
        });

        // Add syntax highlighting if needed
        document.querySelectorAll('pre code').forEach((block) => {
            hljs.highlightBlock(block);
        });
    </script>
</body>
</html>